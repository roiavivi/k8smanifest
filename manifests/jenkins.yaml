apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: jenkins  # Replace with your application name
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://charts.jenkins.io
    chart: jenkins
    targetRevision: 5.5.10  # Replace with the desired version of the Jenkins chart
    helm:
      values: |
        controller:
          JCasC:
            configScripts:
              seed-jobs: |
                security:
                  # disable if you want to skip manual approval for the scripts used in seed-jobs
                  globalJobDslSecurityConfiguration:
                    useScriptSecurity: false
                jobs:
                  # APP-CI
                  - script: >
                      pipelineJob('CI-DSL') {
                        displayName('CI-DSL')
        
                        // any other properties you want, like triggers, number of runs to keep, etc
        
                        definition {
                          cpsScm {
                            scm {
                              // point to your own repo where your root seed-job pipeline is defined
                              git {
                                remote {
                                  url('https://github.com/roiavivi/AppCode.git')
                                  credentials('GITHUB')
                                }
                                branches('*/main')
                              }
                            }
                            scriptPath('Jenkinsfile')
                          }
                        }
                      }
                  # Queue a run of the root seed job as part of CasC
                  - script: queue('CI-DSL')
        
                  # APP-CD
                  - script: >
                      pipelineJob('CD-DSL') {
                        displayName('CD-DSL')
        
                        // Any other properties you want, like triggers, number of runs to keep, etc.
        
                        definition {
                          cpsScm {
                            scm {
                              // Point to your own repo where your second root seed-job pipeline is defined
                              git {
                                remote {
                                  url('https://github.com/roiavivi/k8smanifest.git')
                                  credentials('GITHUB')
                                }
                                branches('*/main')
                              }
                            }
                            scriptPath('Jenkinsfile')
                          }
                        }
                      }

          installPlugins:
            - kubernetes:4285.v50ed5f624918
            - workflow-aggregator:600.vb_57cdd26fdd7
            - git:5.4.1
            - configuration-as-code:1850.va_a_8c31d3158b_
            - aws-credentials:231.v08a_59f17d742
            - pipeline-aws:1.45
            - pipeline-stage-view:2.34
            - docker-plugin:1.6.2
            - docker-workflow:580.vc0c340686b_54
            - docker-commons:443.v921729d5611d
            - docker-java-api:3.3.6-90.ve7c5c7535ddd
            - nodejs:1.6.2
            - dependency-check-jenkins-plugin:5.5.1
            - sonar:2.17.2
            - github:1.40.0
            - job-dsl:1.89
          ingress:
            enabled: true
            paths:
              - path: /
                pathType: ImplementationSpecific
                backend:
                  service:
                    name: jenkins  # Replace with your service name
                    port:
                      number: 8080
            apiVersion: "networking.k8s.io/v1"
            hosts:
              - jenkins.roiavivi.com
            annotations:
              kubernetes.io/ingress.class: alb
              alb.ingress.kubernetes.io/scheme: internet-facing
              alb.ingress.kubernetes.io/target-type: ip
              alb.ingress.kubernetes.io/tags: "Project=myproject,Environment=dev"
              alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
              alb.ingress.kubernetes.io/ssl-redirect: '443'
              external-dns.alpha.kubernetes.io/hostname: jenkins.roiavivi.com
            ingressClassName: alb
            path: /
            labels: {}
            tls:
              - secretName: jenkins-tls  # Replace with your TLS secret name
                hosts:
                  - jenkins.roiavivi.com
  destination:
    server: https://kubernetes.default.svc
    namespace: jenkins  # Replace with your target namespace
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
