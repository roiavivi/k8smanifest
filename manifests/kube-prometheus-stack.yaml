apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  project: default
  source:
    repoURL: 'https://prometheus-community.github.io/helm-charts'
    targetRevision: 34.1.1
    helm:
      skipCrds: true
      values: |-
        ingress:
          enabled: true
          # Used to create an Ingress record.
          hosts:
            - name: monitoring.roiavivi.com
              path: /
              pathType: Prefix
          annotations:
            kubernetes.io/ingress.class: "alb"
            alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
            alb.ingress.kubernetes.io/ssl-redirect: '443'
            alb.ingress.kubernetes.io/target-group-attributes: 'stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=86400'
            alb.ingress.kubernetes.io/target-type: ip
            alb.ingress.kubernetes.io/scheme: internet-facing
            alb.ingress.kubernetes.io/healthcheck-path: /health
            alb.ingress.kubernetes.io/healthcheck-port: traffic-port
            alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
            alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
            alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
            alb.ingress.kubernetes.io/healthy-threshold-count: '2'
            alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
            alb.ingress.kubernetes.io/load-balancer-attributes: 'idle_timeout.timeout_seconds=60'
          ingressClassName: alb
        
          tls:
            - secretName: monitoring-tls
              hosts:
                - monitoring.roiavivi.com
    chart: kube-prometheus-stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
